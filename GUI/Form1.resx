<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAD8e1C9/HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x6
        T/T8ek+b/3xNIfx6UPb8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ//x7UP/8elCj/HpP/vx7UP/8e1D//HpP/v17UHD7fFBA+3xQQPt8UED7fFBA+3xQQPt8
        UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8
        UED7fFBA+3xQQPt8UED7ek6C/HtQ//x6T/T8e1D//HtQ//x7UP/8e1D//HtP8f96UDAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/3xNIfx6ULz8ek/0/HpP2/16T3EAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPx6Tlj8e1D//HtQ//x7UP/8e1D/+3pQjPx7UPP8e1D//HtP8f96
        UDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9tSQf8ek/h/HtQ//x7UP/8e1D//HtQ//x7
        UF0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/HpOWPx7UP/8e1D//HtQ//x7UP/8e09X/3hNNfx7
        UPP8e1D//HtP8f96UDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+3pPR/x7UP/8e1D//HtQ//x7
        UP/8e1D//HpQugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8ek5Y/HtQ//x7UP/8e1D//HtQ//x7
        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
        T/H8e1D//HtP8f96UDAAAAAA/HpOWPx7UP/8e1D//HtQ//x7UP/8e09XAAAAAAAAAAAAAAAA/4BABPx6
        UEn9e1B2/HtPUf+ATQoAAAAAAAAAAAAAAAD8e0+3/HtQ//x7UP/8e1D//HtQ//t8TUIAAAAAAAAAAAAA
        AAAAAAAA/3pQMPx7T/H8e1D//HtP8f96UDD8ek5Y/HtQ//x7UP/8e1D//HtQ//x7T1cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP97TBv8elCt/HtP8ft7UNb9e09qAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/3pQMPx7T/H8e1D//HtP8ft7UI38e1D//HtQ//x7UP/8e1D//HtPVwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/3pQMPx7T/H8e1D//HtQ//x7UP/8e1D//HtQ+fx7
        UP/7e0+B+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8
        UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA+3xQQPt8UED7fFBA/XtQcPx6T/78e1D//HtQ//x7
        UP38e0+y/HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ+ft8UED8e1C9/HtQ+fx7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7UP/8e1D//HtQ//x7
        UP/8e1D//HtQ//x7UP/8elC8AAAAAAAAAAAAAAAAA/8H+AH+A/gA/gP4EH4D+Bg+A/gcHwP4Hg+P+B8H
        //gAA//4AAH/+AAg/BgAMHgYADg4CAB8GAgY/ggIH/8AGB//gDgcH8H4GA/g+BgOEHgYDAg4GAwMGBgM
        DggcHA8AH/wfgB///8AAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>